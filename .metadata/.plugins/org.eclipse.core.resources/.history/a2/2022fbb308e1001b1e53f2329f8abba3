import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;



public class Solution {
    public static void main(String[] args) throws IOException {
    	ListNode a = new ListNode();
        addTwoNumbers(, );
    }
    
    /**
     * Definition for singly-linked list.
     * public class ListNode {
     *     int val;
     *     ListNode next;
     *     ListNode() {}
     *     ListNode(int val) { this.val = val; }
     *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
     * }
     */
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int num1 = 0, num2 = 0, num3 = 0;
        ListNode cur = l1;
        while(cur.next!=null)
        {
            num1 += cur.val;
            num1 *= 10;
        }
        num1 += cur.next.val;
        cur = l2;
        while(cur.next!=null)
        {
        	num2 += cur.val;
        	num2 *= 10;
        }
        num2 += cur.next.val;
        System.out.println(num1 + " " + num2);
        return l1;
    }
    
    public int reverseNum(int num)
    {
        int reverse = 0;
        return reverse;
    }
}

class ListNode {
    int val;
    ListNode next;
    ListNode() {}
    ListNode(int val) { this.val = val; }
    ListNode(int val, ListNode next) { this.val = val; this.next = next; }
   }
