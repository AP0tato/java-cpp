import java.util.SortedSet;
import java.util.TreeSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



public class Solution {
    public static void main(String[] args) {
    	int[][] arr = {{1, 3}, {1, 4}, {2, 3}, {2, 4}, {4, 3}, {8, 9}, {7, 8}, {9, 3}, {6, 5}, {5, 3}, {6, 3}, {7, 3}, {8, 3}, {10, 3};
    	int n = 10;
    	System.out.println(findJudge(n, arr));
    }
    
    public static int findJudge(int n, int[][] trust) {
        int judge = -1;
        SortedSet<Integer> set = new TreeSet<>();
        
        for(int[] i : trust)
        {
            set.add(i[0]);
        }
        
        for(int i = 1; i <= n; i++)
        {
        	if(!set.contains(i)) {judge = i; break;}
        }
        
        int count = 0;
        for(int[] i : trust)
        {
        	if(i[1]==judge) count++;
        }
        
        if(count!=(n-1)) judge=-1;
        return judge;
    }
}
